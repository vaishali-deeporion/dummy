events {
    worker_connections 1024;
}

http {
    upstream backstop_backend {
        least_conn;
        server backstop-backend:3000 max_fails=3 fail_timeout=30s;
        # Add more backend instances here for scaling
        # server backstop-backend-2:3000 max_fails=3 fail_timeout=30s;
        # server backstop-backend-3:3000 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        client_max_body_size 100M;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;

        location / {
            proxy_pass http://backstop_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Socket.io
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /backstop_data/ {
            proxy_pass http://backstop_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
} 